pipeline {
    agent any
    
    environment {
        AWS_REGION = 'eu-west-1'   // Change this to your region
        ECR_REPO_NAME = 'pythonapp'  // Change this to your ECR repo name
        IMAGE_TAG = 'latest'
        ECR_URI = "381492261524.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_REPO_NAME}"
    }

    stages {
        
        stage("Code") {
            steps {
                git url: "https://github.com/chaitanya717/K8s_mutlitier_kubernetes_cluster_with_monitoring.git", branch: "main"
                echo "Code Cloned Successfully"
            }
        }
        
        stage("Check Docker") {
            steps {
                sh "docker --version"
            }
        }
        
        stage("Build") {
            steps {
                dir('pythonrest-api/app') {
                    script {
                        sh """
                            ls
                            docker build -t ${ECR_REPO_NAME}:${IMAGE_TAG} .
                            echo "Code Built Successfully"
                        """
                    }
                }
            }
        }

        stage('Authenticate with ECR') {
            steps {
                withCredentials([[
                    $class: 'AmazonWebServicesCredentialsBinding',
                    credentialsId: 'aws-key'  // Ensure this is the correct AWS credentials ID in Jenkins
                ]]) {
                    script {
                        sh """
                            aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${ECR_URI}
                            echo "Authenticated with ECR successfully"
                        """
                    }
                }
            }
        }

        stage('Tag Image') {
            steps {
                script {
                    sh """
                        docker tag ${ECR_REPO_NAME}:${IMAGE_TAG} ${ECR_URI}:${IMAGE_TAG}
                        echo "Docker image tagged with ECR repository URI"
                    """
                }
            }
        }

        stage('Push to ECR') {
            steps {
                script {
                    sh """
                        docker push ${ECR_URI}:${IMAGE_TAG}
                        echo "Docker image pushed to ECR successfully"
                    """
                }
            }
        }
    }
}
