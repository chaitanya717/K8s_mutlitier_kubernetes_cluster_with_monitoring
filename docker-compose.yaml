version: '3'
services:
  postgres:
    image: postgres:14
    container_name: postgres-container
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DATABASE_NAME}
    volumes:
      - postgres_14_data:/var/lib/postgresql/data

  redis:
    image: redis
    container_name: redis-container
    restart: unless-stopped
    ports:
      - "6379:6379"

  nodeapp:
    build: ./app
    container_name: nodejs-app-container
    restart: unless-stopped
    depends_on:
      - postgres
      - redis
    ports:
      - "3000:3000"
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USERNAME}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DATABASE_NAME}
    volumes:
      - .:/app

  pythonapp:
    build: ./python-api/app
    container_name: python-app-container
    restart: unless-stopped
    depends_on:
      - postgres
    ports:
      - "5000:5000"
    environment:
      SQLALCHEMY_DATABASE_URI: 'postgresql://${POSTGRES_USERNAME}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DATABASE_NAME}'

  springapp:
    build: ./springboot-app
    container_name: spring-app-container
    restart: on-failure
    depends_on:
      - postgres
    ports:
      - ${SPRING_LOCAL_PORT}:${SPRING_DOCKER_PORT}
    env_file: .env
    environment:
      SPRING_APPLICATION_JSON: '{
        "spring.datasource.url"  : "jdbc:postgresql://postgres:5432/${POSTGRES_DATABASE_NAME}",
        "spring.datasource.username" : "${POSTGRES_USERNAME}",
        "spring.datasource.password" : "${POSTGRES_PASSWORD}",
        "spring.jpa.properties.hibernate.dialect" : "org.hibernate.dialect.PostgreSQLDialect",
        "spring.jpa.hibernate.ddl-auto" : "update"
      }'
    volumes:
      - .m2:/root/.m2
    stdin_open: true
    tty: true

volumes:
  postgres_14_data:
